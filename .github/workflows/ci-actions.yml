name: CI

on:
  push:
    paths-ignore:
      - 'README.md'
  pull_request:
    types: [ assigned, opened, synchronize, reopened, ready_for_review, edited ]
    paths-ignore:
      - 'README.md'
  schedule:
    - cron: '0 0 * * *'

jobs:

  linux-jvm-tests:
    name: JDK ${{matrix.java-version}} JVM Tests
    timeout-minutes: 120
    strategy:
      matrix:
        java-version: [ 8, 11, 17 ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}
      - name: Build with Maven
        run: mvn install
      - name: Prepare failure archive (if maven failed)
        if: failure()
        shell: bash
        run: find . -name '*-reports' -type d | tar -czvf test-reports.tgz -T -
      - name: Upload failure Archive (if maven failed)
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: test-reports-linux-jvm${{matrix.java-version}}
          path: 'test-reports.tgz'

  code-scan:
    name: Code Scan
    if: ${{ github.event_name != 'pull_request' && github.repository_owner == 'project-openubl' }}
    timeout-minutes: 120
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Build with Maven and Coverage/Sonar
        run: mvn verify -P coverage,sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Codecov metrics
        uses: codecov/codecov-action@v1
      - name: Prepare failure archive (if maven failed)
        if: failure()
        shell: bash
        run: find . -name '*-reports' -type d | tar -czvf test-reports.tgz -T -
      - name: Upload failure Archive (if maven failed)
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: test-reports-linux-jvm-codescan
          path: 'test-reports.tgz'
