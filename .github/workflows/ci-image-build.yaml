name: CI (test image build for a PR with build related changes)

on:
  pull_request:
    branches:
      - "main"
      - "release-*"

jobs:
  checks:
    runs-on: ubuntu-latest
    outputs:
      should-test: ${{ steps.check-changes.outputs.should-test }}

    steps:
      - uses: actions/checkout@v4

      - name: What files changed?
        id: changed
        uses: tj-actions/changed-files@v46
        with:
          files: |
            Dockerfile.*
            **/package.json
            **/package-lock.json

      - name: Check if build related files have been changed in a PR
        id: check-changes
        env:
          IS_PR: ${{ !!github.event.pull_request }}
          ANY_MODIFIED: ${{ steps.changed.outputs.any_modified }}
        run: |
          TEST_IMAGE_BUILD=$(
            if [[ $IS_PR == true ]] && [[ $ANY_MODIFIED == true ]]; then
              echo "true"
            else
              echo "false"
            fi
          )

          echo "is-pr=$IS_PR" >> "$GITHUB_OUTPUT"
          echo "changed=${ANY_MODIFIED:-false}" >> "$GITHUB_OUTPUT"
          echo "should-test=$TEST_IMAGE_BUILD" >> "$GITHUB_OUTPUT"

      - name: Summarize findings
        env:
          MODIFIED_FILES: ${{ steps.changed.outputs.all_modified_files }}
        run: |
          cat >> "$GITHUB_STEP_SUMMARY" <<EOF
          ## Findings
          PR triggered? \`${{ steps.check-changes.outputs.is-pr }}\`
          PR includes a build file related change? \`${{ steps.check-changes.outputs.changed }}\`
          Should the image build be tested? \`${{ steps.check-changes.outputs.should-test }}\`
          EOF

          if [[ -n "$MODIFIED_FILES" ]]; then
            echo "## Build related modified files" >> "$GITHUB_STEP_SUMMARY"
            for file in ${MODIFIED_FILES}; do
              echo "  - \`$file\`" >> "$GITHUB_STEP_SUMMARY"
            done
          fi

  #
  # Only test the image build, no push to registry is required.
  #
  test-image-build:
    runs-on: ubuntu-latest
    needs: checks
    if: ${{ needs.checks.outputs.should-test == 'true' }}

    strategy:
      fail-fast: true
      matrix:
        architecture: # keep this list in sync with `image-build.yaml`
          - amd64
          - arm64

    concurrency:
      group: test-image-build-${{ matrix.architecture }}_${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout merge commit for PR${{ github.event.pull_request.number }}
        uses: actions/checkout@v4

      - name: Setup QEMU to be able to build on ${{ matrix.architecture }}
        if: ${{ matrix.architecture != 'amd64' }}
        uses: docker/setup-qemu-action@master
        with:
          platforms: ${{ matrix.architecture }}

      - name: Test build image on ${{ matrix.architecture }}
        id: test-build
        uses: redhat-actions/buildah-build@main
        with:
          image: "openubl-ui"
          tags: pr${{ github.event.pull_request.number }}-${{ matrix.architecture }}
          extra-args: "--no-cache --rm --ulimit nofile=4096:4096"
          archs: ${{ matrix.architecture }}
          labels: ""
          containerfiles: "./Dockerfile.ui"
          context: "."
