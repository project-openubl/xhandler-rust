//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "credentials")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub description: Option<String>,
    pub username_sol: String,
    pub password_sol: String,
    pub client_id: String,
    pub client_secret: String,
    pub url_invoice: String,
    pub url_despatch: String,
    pub url_perception_retention: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::send_rule::Entity")]
    SendRule,
}

impl Related<super::send_rule::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SendRule.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
